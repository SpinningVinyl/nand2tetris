function Ball.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push this 2
push constant 0
eq
push this 2
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 2
label IF_FALSE0
push this 0
push this 2
sub
push constant 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 1
add
pop this 0
goto IF_END1
label IF_FALSE1
push this 0
push this 2
add
push constant 511
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 511
push this 2
sub
pop this 0
label IF_FALSE2
label IF_END1
push this 1
push this 2
sub
push constant 2
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push constant 1
add
pop this 1
goto IF_END3
label IF_FALSE3
push this 1
push this 2
add
push constant 254
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 254
push this 2
sub
pop this 1
label IF_FALSE4
label IF_END3
push pointer 0
call Ball.draw 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.setCoordinates 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
return
