function BallMove.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 48
pop this 2
push constant 48
pop this 3
push constant 20
pop this 5
push constant 1
neg
pop this 0
push constant 1
neg
pop this 1
push this 2
push this 3
push this 5
call Ball.new 3
pop this 4
push pointer 0
return
function BallMove.dispose 0
push argument 0
pop pointer 0
push this 4
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BallMove.abs 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
push argument 1
call Math.multiply 2
pop local 0
goto IF_END0
label IF_FALSE0
push argument 1
pop local 0
label IF_END0
push local 0
return
function BallMove.move 0
push argument 0
pop pointer 0
push this 4
call Ball.erase 1
pop temp 0
push this 4
push argument 1
push argument 2
call Ball.setCoordinates 3
pop temp 0
push this 4
call Ball.draw 1
pop temp 0
push constant 0
return
function BallMove.bounce 4
push argument 0
pop pointer 0
push this 2
push this 5
sub
pop local 1
push this 2
push this 5
add
pop local 0
push this 3
push this 5
add
pop local 2
push this 3
push this 5
sub
pop local 3
push local 0
push constant 511
push this 0
sub
gt
push local 1
push pointer 0
push this 0
call BallMove.abs 2
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
push this 0
call Math.multiply 2
pop this 0
label IF_FALSE0
push local 2
push constant 254
push this 1
sub
gt
push local 3
push pointer 0
push this 1
call BallMove.abs 2
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
push this 1
call Math.multiply 2
pop this 1
label IF_FALSE1
push this 2
push this 0
add
pop this 2
push this 3
push this 1
add
pop this 3
push pointer 0
push this 2
push this 3
call BallMove.move 3
pop temp 0
push constant 5
call Sys.wait 1
pop temp 0
push constant 0
return
function BallMove.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BallMove.bounce 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
